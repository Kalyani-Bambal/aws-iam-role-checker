name: Terraform Pre-Deployment Check

on:
  workflow_dispatch:

env:
  AWS_ACCOUNTS: 851321632855
  AWS_REGIONS: us-east-1,ap-south-1
  ROLE_NAMES: terraform-role,demo-ec2role-1,demo-ec2role-kalyani,ebs-volume-check-role-gv5vz5a9

jobs:
  terraform-precheck:
    runs-on: ubuntu-latest
    permissions:
      id-token: write    # Required for OIDC
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq & yq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq
          sudo wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/bin/yq

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # ✅ Authenticate via OIDC (no static keys)
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::851321632855:role/githubaction-aws-connectivity-role
          aws-region: ap-south-1

      - name: Terraform Pre-Deployment Check
        run: |
          set -euo pipefail

          IFS=',' read -ra REG_ARR <<< "$AWS_REGIONS"
          ROLE_NAMES_JSON=$(printf '%s' "$ROLE_NAMES" | jq -R 'split(",")')
          FAILURES=()

          echo "Starting Terraform Pre-Deployment Check..."
          echo "Accounts: $AWS_ACCOUNTS"
          echo "Regions: $AWS_REGIONS"
          echo "Roles: $ROLE_NAMES"

          for REGION in "${REG_ARR[@]}"; do
            echo "===================================="
            echo "Running precheck in region: $REGION"
            echo "===================================="

            export AWS_REGION="$REGION"
            pushd terraform/precheck >/dev/null

            export TF_VAR_role_names="$ROLE_NAMES_JSON"
            export TF_VAR_region="$REGION"

            echo "Running: terraform init"
            terraform init -input=false -no-color

            echo "Running: terraform validate"
            if ! terraform validate -no-color; then
              echo "❌ Terraform validation failed in region $REGION"
              FAILURES+=("$REGION:validate")
              popd >/dev/null
              continue
            fi

            echo "Running: terraform plan (precheck)"
            if ! terraform plan -input=false -no-color -out=precheck.plan; then
              echo "❌ Terraform plan failed in region $REGION"
              FAILURES+=("$REGION:plan")
              popd >/dev/null
              continue
            fi

            echo "✅ Precheck passed for region: $REGION"
            popd >/dev/null
          done

          if [ ${#FAILURES[@]} -ne 0 ]; then
            echo "❌ Some prechecks failed:"
            printf '%s\n' "${FAILURES[@]}"
            exit 1
          else
            echo "✅ All Terraform prechecks passed successfully!"
          fi
